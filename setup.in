
SETUP_INFO = dict(
    name = '${project:name}',
    version = '${infi.recipe.template.version:version}',
    author = '${infi.recipe.template.version:author}',
    author_email = '${infi.recipe.template.version:author_email}',

    url = 'http://www.infinidat.com',
    license = 'PSF',
    description = """${project:description}""",
    long_description = """${project:long_description}""",

    # http://pypi.python.org/pypi?%3Aaction=list_classifiers
    classifiers = [
        "Intended Audience :: Developers",
        "Intended Audience :: System Administrators",
        "License :: OSI Approved :: Python Software Foundation License",
        "Operating System :: OS Independent",
        "Programming Language :: Python",
        "Topic :: Software Development :: Libraries :: Python Modules",
    ],

    install_requires = ${project:install_requires},
    namespace_packages = ${project:namespace_packages},

    # packages = find_packages('src'),
    package_dir = {'': 'src'},
    include_package_data = True,
    zip_safe = False,

    entry_points = dict(
        console_scripts = ${project:console_scripts},
        gui_scripts = []),
    )

platform_install_requires = {
    'windows' : ${project:install_requires_windows},
    'linux' : ${project:install_requires_linux},
    'macosx' : ${project:install_requires_macosx},
}

def _get_os_name():
    import platform
    system = platform.system().lower().replace('-', '').replace('_', '')
    if system == 'darwin':
        return 'macosx'
    return system


def setup():
    from setuptools import setup as _setup
    from setuptools import find_packages
    SETUP_INFO['packages'] = find_packages('src')
    SETUP_INFO['install_requires'] += platform_install_requires[_get_os_name()]
    _setup(**SETUP_INFO)

if __name__ == '__main__':
    setup()

